// Code generated by entc, DO NOT EDIT.

package pluginversionproperty

import (
	"fmt"
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the pluginversionproperty type in the database.
	Label = "plugin_version_property"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldDefault holds the string denoting the default field in the database.
	FieldDefault = "default"
	// FieldRequired holds the string denoting the required field in the database.
	FieldRequired = "required"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// EdgePlugin holds the string denoting the plugin edge name in mutations.
	EdgePlugin = "plugin"
	// EdgeVersion holds the string denoting the version edge name in mutations.
	EdgeVersion = "version"
	// Table holds the table name of the pluginversionproperty in the database.
	Table = "plugin_version_properties"
	// PluginTable is the table that holds the plugin relation/edge.
	PluginTable = "plugin_version_properties"
	// PluginInverseTable is the table name for the Plugin entity.
	// It exists in this package in order to avoid circular dependency with the "plugin" package.
	PluginInverseTable = "plugins"
	// PluginColumn is the table column denoting the plugin relation/edge.
	PluginColumn = "plugin_version_property_plugin"
	// VersionTable is the table that holds the version relation/edge.
	VersionTable = "plugin_version_properties"
	// VersionInverseTable is the table name for the PluginVersion entity.
	// It exists in this package in order to avoid circular dependency with the "pluginversion" package.
	VersionInverseTable = "plugin_versions"
	// VersionColumn is the table column denoting the version relation/edge.
	VersionColumn = "plugin_version_property_version"
)

// Columns holds all SQL columns for pluginversionproperty fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldName,
	FieldDefault,
	FieldRequired,
	FieldType,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "plugin_version_properties"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"plugin_version_property_plugin",
	"plugin_version_property_version",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// DefaultValidator is a validator for the "default" field. It is called by the builders before save.
	DefaultValidator func(string) error
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)

// Type defines the type for the "type" enum field.
type Type string

// Type values.
const (
	TypeBool   Type = "bool"
	TypeString Type = "string"
	TypeInt    Type = "int"
)

func (_type Type) String() string {
	return string(_type)
}

// TypeValidator is a validator for the "type" field enum values. It is called by the builders before save.
func TypeValidator(_type Type) error {
	switch _type {
	case TypeBool, TypeString, TypeInt:
		return nil
	default:
		return fmt.Errorf("pluginversionproperty: invalid enum value for type field: %q", _type)
	}
}
